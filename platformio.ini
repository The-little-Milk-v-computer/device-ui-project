; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = native_320x240

[env]
platform = platformio/espressif32@6.3.2
framework = arduino
upload_protocol = esp-builtin
build_type = debug
build_flags = -Og
  -DCORE_DEBUG_LEVEL=5
  -DCONFIG_ARDUHAL_ESP_LOG
  -DCONFIG_ARDUHAL_LOG_COLORS=1
  -DLV_LVGL_H_INCLUDE_SIMPLE
  -DLV_CONF_INCLUDE_SIMPLE
  -DLV_COMP_CONF_INCLUDE_SIMPLE
  -DLV_BUILD_TEST=0
  -I src
  -I src/mesh/generated


[env:WT32-SC01-PLUS]
board = wt32-sc01-plus
build_flags = ${env.build_flags} -fno-omit-frame-pointer
  -D ARCH_ESP32
  -D WT32_SC01
  -D USE_ILOG
  -D USE_SERIAL2
  -D SERIAL_RX=10
  -D SERIAL_TX=11
  -D HAS_TFT=1
  -D RAM_SIZE=512
  -D LGFX_DRIVER=LGFX_WT_SC01_PLUS
   -D VIEW_320x240 ; TODO: remove 320x240 when ready
;  -D VIEW_480x320
;  -I lib/device-ui/generated/ui_480x320
  -I lib
  -I lib/device-ui/generated/ui_320x240
  -I lib/mesh/generated
  -I variants/wt32-sc01-plus
build_src_filter = ${env.build_src_filter}
  +<../lib/mesh>
  -<../lib/comms/packet>
  +<../lib/comms/serial>
  +<../lib/device-ui/source>
;  +<../lib/device-ui/generated/ui_480x320>
;  +<../lib/device-ui/generated/ui_480x320/fonts>
   +<../lib/device-ui/generated/ui_320x240>
   +<../lib/device-ui/generated/ui_320x240/fonts>
lib_deps = lovyan03/LovyanGFX@1.1.12

; this is the variant from Sunton store
[env:ESP32-2432S028RV1]
board = esp32dev
upload_protocol = esptool
build_flags = ${env.build_flags} -Wl,-Map,output.map -fno-omit-frame-pointer
  -D ARCH_ESP32
  -D ESP32_2432S028RV1
  -D USE_ILOG
  -D WAKE_ON_SERIAL
  -D USE_SERIAL0 ; for header P1 power supply base (no debug output)
;  -D SERIAL_RX=35 ; header P3 extended I/O (use with SERIAL1/2 for debugging)
;  -D SERIAL_TX=22 ; header P3 extended I/O
  -D SERIAL_RX=3 ; header P1 power supply base (use with SERIAL0 in "production")
  -D SERIAL_TX=1 ; header P1 power supply base
  -D CALIBRATE_TOUCH=0
  -D HAS_TFT=1
  -D RAM_SIZE=96
  -D LGFX_DRIVER=LGFX_ESP2432S028RV1
  -D VIEW_320x240
  -I lib/device-ui/generated/ui_320x240
  -I lib
  -I lib/mesh/generated
  -I variants/esp32_2432S028R
build_src_filter = ${env.build_src_filter}
  +<../lib/mesh>
  +<../lib/device-ui/source>
  +<../lib/device-ui/generated/ui_320x240>
  +<../lib/device-ui/generated/ui_320x240/fonts>
lib_deps = lovyan03/LovyanGFX@1.1.12

; this is the variant from Estardyn store
[env:ESP32-2432S028RV2]
board = esp32dev
upload_protocol = esptool
build_flags = ${env.build_flags} -Wl,-Map,output.map -fno-omit-frame-pointer
  -D ARCH_ESP32
  -D ESP32_2432S028RV2
  -D USE_ILOG
  -D WAKE_ON_SERIAL
  -D USE_SERIAL2 ; Serial0 is for debug output
;  -D SERIAL_RX=35 ; header P3 extended I/O (use with SERIAL1/2 for debugging)
;  -D SERIAL_TX=22 ; header P3 extended I/O
;  -D SERIAL_RX=3 ; header P1 power supply base (use with SERIAL0 in "production")
;  -D SERIAL_TX=1 ; header P1 power supply base
  -D CALIBRATE_TOUCH=1
  -D RAM_SIZE=96
  -D HAS_TFT=1
  -D LGFX_DRIVER=LGFX_ESP2432S028RV2
  -D VIEW_320x240
  -I lib/device-ui/generated/ui_320x240
  -I lib
  -I lib/mesh/generated
  -I variants/esp32_2432S028R
build_src_filter = ${env.build_src_filter}
  +<../lib/mesh>
  +<../lib/device-ui/source>
  +<../lib/device-ui/generated/ui_320x240>
  +<../lib/device-ui/generated/ui_320x240/fonts>
lib_deps = lovyan03/LovyanGFX@1.1.12

[env:NodeMCU-ILI9341] ; diy project with ESP32 dev board and ILI9341 TFT touch display
board = nodemcu-32s
upload_protocol = esptool
build_flags = ${env.build_flags} -Os -Wl,-Map,output.map -fno-omit-frame-pointer
  -D ARCH_ESP32
  -D NODEMCU_32S
  -D USE_ILOG
  -D USE_SERIAL2
;  -D SERIAL_RX=16
;  -D SERIAL_TX=17
  -D CALIBRATE_TOUCH=0
  -D RAM_SIZE=56
  -D HAS_TFT=1
  -D LGFX_DRIVER=LGFX_ESPILI9341XPT2046
  -D VIEW_320x240
  -I lib/device-ui/generated/ui_320x240
  -I lib
  -I lib/mesh/generated
build_src_filter = ${env.build_src_filter}
  +<../lib/mesh>
  +<../lib/device-ui/source>
  +<../lib/device-ui/generated/ui_320x240>
  +<../lib/device-ui/generated/ui_320x240/fonts>
lib_deps = lovyan03/LovyanGFX@1.1.12

[env:T-HMI]
board = lilygo-t-hmi
upload_protocol = esptool
build_flags = ${env.build_flags} -fno-omit-frame-pointer
  -D ARCH_ESP32
  -D T_HMI
  -D USE_ILOG
  -D WAKE_ON_SERIAL
  -D USE_SERIAL1
  -D SERIAL_RX=15
  -D SERIAL_TX=16
  -D CALIBRATE_TOUCH=0
  -D PWR_ON_PIN=14
  -D PWR_EN_PIN=10
  -D HAS_TFT=1
  -D RAM_SIZE=512
  -D LV_USE_PERF_MONITOR=0
  -D LV_USE_MEM_MONITOR=0
;  -D USE_DOUBLE_BUFFER
  -D LGFX_DRIVER=LGFX_T_HMI
  -D VIEW_320x240
  -I lib/device-ui/generated/ui_320x240
  -I lib
  -I lib/mesh/generated
build_src_filter = ${env.build_src_filter}
  +<../lib/mesh>
  +<../lib/device-ui/source>
  +<../lib/device-ui/generated/ui_320x240>
  +<../lib/device-ui/generated/ui_320x240/fonts>
lib_deps = lovyan03/LovyanGFX@1.1.12


[env:T-DECK]
board = t-deck
build_flags = ${env.build_flags}
  -D ARCH_ESP32
  -D T_DECK
  -D USE_ILOG
  -D USE_DUMMY_SERIAL
  -D CALIBRATE_TOUCH=0
  -D KB_POWERON=10
  -D HAS_TFT=1
  -D RAM_SIZE=512
;  -D USE_DOUBLE_BUFFER
  -D LGFX_DRIVER=LGFX_TDECK
  -D VIEW_320x240
  -I lib/device-ui/generated/ui_320x240
  -I lib
  -I lib/mesh/generated
  -I variants/t-deck
build_src_filter = ${env.build_src_filter}
  +<../lib/mesh>
  +<../lib/device-ui/source>
  +<../lib/device-ui/generated/ui_320x240>
  +<../lib/device-ui/generated/ui_320x240/fonts>
lib_deps = lovyan03/LovyanGFX@1.1.12


[env:T-WATCH-S3]
board = t-watch-s3
upload_protocol = esptool
build_flags = ${env.build_flags}
  -D ARCH_ESP32
  -D T_WATCH_S3
  -D USE_ILOG
  -D USE_DUMMY_SERIAL
  -D HAS_TFT=1
  -D RAM_SIZE=512
;  -D USE_DOUBLE_BUFFER
  -D LGFX_DRIVER=LGFX_TWATCH_S3
  -D VIEW_240x240
  -D TFT_BL=45
  -I lib/device-ui/generated/ui_240x240
  -I lib
  -I lib/mesh/generated
  -I variants/t-watch-s3
build_src_filter = ${env.build_src_filter} 
  +<../lib/mesh>
  +<../lib/device-ui/source>
  +<../lib/device-ui/generated/ui_240x240>
  +<../lib/device-ui/generated/ui_240x240/fonts>
lib_deps = lovyan03/LovyanGFX@1.1.12


[env:HELTEC-TRACKER]
board = heltec-wireless-tracker
build_flags = ${env.build_flags}
  -D ARCH_ESP32
  -D HELTEC_TRACKER
  -D USE_ILOG
  -D USE_DUMMY_SERIAL
  -D RAM_SIZE=96
  -D LGFX_DRIVER=LGFX_HELTEC_TRACKER
  -D VIEW_160x80
  -I lib/device-ui/generated/ui_160x80
  -I lib
  -I lib/mesh/generated
  -I variants/heltec-wireless-tracker
build_src_filter = ${env.build_src_filter}
  +<../lib/mesh>
  +<../lib/device-ui/include>
  +<../lib/device-ui/generated/ui_160x80>
  +<../lib/device-ui/source>
lib_deps = lovyan03/LovyanGFX@1.1.12


[env:picow-oled]
platform = https://github.com/maxgerhardt/platform-raspberrypi.git
board = pico
board_build.filesystem_size = 0.5m
board_build.core = earlephilhower
upload_protocol = cmsis-dap
debug_speed = 5000
debug_init_break = tbreak setup
debug_port = /dev/ttyACM0
debug_tool = cmsis-dap
build_flags = ${env.build_flags} -I.
  -D ARCH_RP2040
  -D PICO
 ;-D LIB_PICO_STDIO_USB           ; for printf() via USB serial, not UART
  -D PICO_USB                     ; activate tinyusb
  -D USE_ILOG
  -D RAM_SIZE=64
  -D OLED_DRIVER=OLED
  -D VIEW_128x64
  -I lib
  -I lib/mesh/generated
  -I lib/device-ui/generated/ui_128x64
build_src_filter = ${env.build_src_filter}
  +<../lib/mesh>
  +<../lib/device-ui/generated/ui_128x64>
  +<../lib/device-ui/generated/ui_128x64/fonts>
  +<../lib/device-ui/source>


[env:native_320x240] ; Linux simulation
platform = https://github.com/meshtastic/platform-native.git#1b8a32c60ab7495026033858d53c737f7d1cb34a
board = cross_platform
debug_test = *
build_flags = ${env.build_flags} -O0 -Wall -Wextra -fsanitize=address -lgpiod -lX11
  -D ARCH_RASPBERRY_PI
  -D ARDUINO
  -D USE_ILOG
  -D USE_DUMMY_SERIAL
  -D USE_X11=1
  -D HAS_TFT=1
  -D RAM_SIZE=1024
  -D VIEW_320x240
  -D DISP_HOR_RES=320
  -D DISP_VER_RES=240
  -I lib
  -I lib/mesh/generated
  -I lib/device-ui/generated/ui_320x240
;lib_ldf_mode = chain+ ; only for test
build_src_filter = ${env.build_src_filter} 
  +<../lib/device-ui/generated/ui_320x240>
  +<../lib/device-ui/generated/ui_320x240/fonts>
  +<../lib/device-ui/resources>
  +<../lib/device-ui/portduino>
  +<../lib/device-ui/source>
  +<../lib/log>
lib_deps = ${env.lib_deps}
  ; x11 is currently only supported in master branch, not in 8.3.0
  https://github.com/lvgl/lv_drivers.git#0091dc612facc94dce1061a9b78d641c77f1791a
  https://github.com/lovyan03/LovyanGFX.git#a0e0d14df3f6d24e589b77adb524cc3a75dbf8fa ; contains SDL2 fix
  rweather/Crypto@^0.4.0

[env:native_240x240] ; Linux simulation
platform = https://github.com/meshtastic/platform-native.git#1b8a32c60ab7495026033858d53c737f7d1cb34a
board = cross_platform
build_flags = ${env.build_flags} -O0 -Wall -Wextra -fsanitize=address -lgpiod -lX11
  -D ARCH_RASPBERRY_PI
  -D ARDUINO
  -D USE_ILOG
  -D USE_DUMMY_SERIAL
  -D USE_X11=1
  -D HAS_TFT=1
  -D RAM_SIZE=1024
  -D VIEW_240x240
  -D DISP_HOR_RES=240
  -D DISP_VER_RES=240
  -I lib
  -I lib/mesh/generated
  -I lib/device-ui/generated/ui_240x240
build_src_filter = ${env.build_src_filter}
  +<../lib/device-ui/generated/ui_240x240/fonts>
  +<../lib/device-ui/generated/ui_240x240>
  +<../lib/device-ui/resources>
  +<../lib/device-ui/portduino>
  +<../lib/device-ui/source>
  +<../lib/log>
lib_deps = ${env.lib_deps}
  ; x11 is currently only supported in master branch, not in 8.3.0
  https://github.com/lvgl/lv_drivers.git#0091dc612facc94dce1061a9b78d641c77f1791a
  https://github.com/lovyan03/LovyanGFX.git#a0e0d14df3f6d24e589b77adb524cc3a75dbf8fa ; contains SDL2 fix
  rweather/Crypto@^0.4.0
