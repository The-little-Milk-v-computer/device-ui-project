; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = native_320x240

[device-ui_base]
lib_deps =
  https://github.com/meshtastic/device-ui/archive/3cdb8a63039aa2cf426104ab02656996730f79fa.zip
  nanopb/Nanopb@^0.4.91


[env]
platform = espressif32@6.9.0
framework = arduino
upload_protocol = esp-builtin
board_build.filesystem = littlefs
extra_scripts = ./bin/littlefsbuilder.py
build_type = release
build_flags = -Os
  -DCORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_VERBOSE
  -DLOG_LOCAL_LEVEL=ESP_LOG_VERBOSE
  -DCONFIG_ARDUHAL_ESP_LOG
  -DCONFIG_ARDUHAL_LOG_COLORS=1
  -DLV_LVGL_H_INCLUDE_SIMPLE
  -DLV_CONF_INCLUDE_SIMPLE
  -DLV_COMP_CONF_INCLUDE_SIMPLE
  -DLV_BUILD_TEST=0
  -I src
  -I src/mesh/generated
lib_deps =
  ${device-ui_base.lib_deps}
  lovyan03/LovyanGFX@1.2.0

[env:WT32-SC01-PLUS]
board = wt32-sc01-plus
board_build.partitions = default_16MB.csv
build_type = release
build_flags = ${env.build_flags} -O2
  -D ARCH_ESP32
  -D WT32_SC01
  -D USE_ILOG
  -D LV_USE_LOG=0
  -D USE_SERIAL2
  -D WAIT_FOR_SERIAL0
  -D SERIAL_RX=10
  -D SERIAL_TX=11
;  -D CALIBRATE_TOUCH=0
  -D HAS_TFT=1
  -D RAM_SIZE=1560
;  -D LV_CACHE_DEF_SIZE=1572864
  -D DISPLAY_SET_RESOLUTION
  -D LGFX_DRIVER=LGFX_WT_SC01_PLUS
  -D VIEW_320x240
  -D LV_USE_SYSMON=0
  -D LV_USE_PROFILER=0
  -D LV_USE_PERF_MONITOR=0
  -D LV_USE_MEM_MONITOR=0
  -D HAS_SDCARD
  -D SDCARD_USE_SPI1
  -D SD_SPI_FREQUENCY=10000000
  -D MAP_FULL_REDRAW
  ;-D USE_LANDSCAPE
  -I lib
  -I lib/mesh/generated
  -I variants/wt32-sc01-plus
build_src_filter = ${env.build_src_filter}
  +<../lib/mesh>
lib_deps = ${env.lib_deps}
  LittleFS

; CYD original - this is the variant from Sunton store
[env:ESP32-2432S028RV1]
board = esp32dev
board_build.partitions = huge_app.csv
upload_protocol = esptool
build_flags = ${env.build_flags} -Wl,-Map,output.map -fno-omit-frame-pointer
  -D ARCH_ESP32
  -D ESP32_2432S028RV1
  -D USE_ILOG
  -D LV_USE_LOG=0
  -D WAKE_ON_SERIAL
  -D USE_SERIAL0 ; for header P1 power supply base (no debug output)
;  -D SERIAL_RX=35 ; header P3 extended I/O (use with SERIAL1/2 for debugging)
;  -D SERIAL_TX=22 ; header P3 extended I/O
  -D SERIAL_RX=3 ; header P1 power supply base (use with SERIAL0 in "production")
  -D SERIAL_TX=1 ; header P1 power supply base
  -D CALIBRATE_TOUCH=0
  -D LV_USE_PERF_MONITOR=0
  -D LV_USE_MEM_MONITOR=0
  -D HAS_TFT=1
  -D RAM_SIZE=96
  -D LGFX_DRIVER=LGFX_ESP2432S028RV1
  -D VIEW_320x240
  -I lib
  -I lib/mesh/generated
  -I variants/esp32_2432S028R
build_src_filter = ${env.build_src_filter}
  +<../lib/mesh>
lib_deps = ${env.lib_deps}
  LittleFS

; CYD clone - this is the variant from Estardyn store with USB-C
[env:ESP32-2432S028RV2]
board = esp32dev
board_build.partitions = huge_app.csv
upload_protocol = esptool
build_flags = ${env.build_flags} -Wl,-Map,output.map -fno-omit-frame-pointer
  -D ARCH_ESP32
  -D ESP32_2432S028RV2
  -D USE_ILOG
  -D LV_USE_LOG=0
  -D WAKE_ON_SERIAL
  -D USE_SERIAL0 ; Serial0 is for debug output
;  -D SERIAL_RX=35 ; header P3 extended I/O (use with SERIAL1/2 for debugging)
;  -D SERIAL_TX=22 ; header P3 extended I/O
  -D SERIAL_RX=3 ; header P1 power supply base (use with SERIAL0 in "production")
  -D SERIAL_TX=1 ; header P1 power supply base
;  -D CALIBRATE_TOUCH=1
  -D LV_USE_PERF_MONITOR=1
  -D LV_USE_MEM_MONITOR=1
  -D RAM_SIZE=96
  -D HAS_TFT=1
  -D LGFX_DRIVER=LGFX_ESP2432S028RV2
  -D VIEW_320x240
  -I lib
  -I lib/mesh/generated
  -I variants/esp32_2432S028R
build_src_filter = ${env.build_src_filter}
  +<../lib/mesh>
lib_deps = ${env.lib_deps}
  LittleFS

; CYD 2.2inch variant - with MCU8080 ST7789 8bit parallel interface
[env:ESP32-2432S022]
board = esp32dev
upload_protocol = esptool
build_flags = ${env.build_flags} -Wl,-Map,output.map -fno-omit-frame-pointer
  -D ARCH_ESP32
  -D ESP32_2432S022
  -D USE_ILOG
  -D LV_USE_LOG=0
  -D WAKE_ON_SERIAL
  -D USE_SERIAL2 ; Serial0 is for debug output
;  -D SERIAL_RX=35 ; header P3 extended I/O (use with SERIAL1/2 for debugging)
;  -D SERIAL_TX=22 ; header P3 extended I/O
;  -D SERIAL_RX=3 ; header P1 power supply base (use with SERIAL0 in "production")
;  -D SERIAL_TX=1 ; header P1 power supply base
  -D CALIBRATE_TOUCH=0
  -D LV_USE_PERF_MONITOR=0
  -D LV_USE_MEM_MONITOR=0
  -D LV_LOG_LEVEL=LV_LOG_LEVEL_TRACE
  -D RAM_SIZE=96
  -D HAS_TFT=1
  -D LGFX_DRIVER=LGFX_ESP2432S022
  -D BUFFER_LINES=100
  -D VIEW_320x240
  -I lib
  -I lib/mesh/generated
build_src_filter = ${env.build_src_filter}
  +<../lib/mesh>
lib_deps = ${env.lib_deps}
  LittleFS

[env:NodeMCU-ILI9341] ; diy project with ESP32 dev board and ILI9341 TFT touch display
board = nodemcu-32s
;platform_packages = espressif/toolchain-xtensa-esp32@12.2.0+20230208
upload_protocol = esptool
build_flags = ${env.build_flags} -Os -Wl,-Map,output.map -fno-omit-frame-pointer
  -D ARCH_ESP32
  -D NODEMCU_32S
  -D USE_ILOG
  -D LV_USE_LOG=0
  -D USE_SERIAL2
;  -D SERIAL_RX=16
;  -D SERIAL_TX=17
  -D CALIBRATE_TOUCH=0
  -D RAM_SIZE=56
  -D HAS_TFT=1
  -D LGFX_DRIVER=LGFX_ESPILI9341XPT2046
  -D VIEW_320x240
  -I lib
  -I lib/mesh/generated
build_src_filter = ${env.build_src_filter}
  +<../lib/mesh>
lib_deps = ${env.lib_deps}
  LittleFS

[env:S2-MINI-ST7789]
board = lolin_s2_mini
board_build.partitions = huge_app.csv
# Name,     Type, SubType, Offset,  Size,    Flags
# nvs,      data, nvs,     0x9000,  0x5000,
# otadata,  data, ota,     0xe000,  0x2000,
# app0,     app,  ota_0,   0x10000, 0x300000,
# spiffs,   data, spiffs,  0x310000,0xE0000,
# coredump, data, coredump,0x3F0000,0x10000,
upload_protocol = esptool

build_flags = ${env.build_flags} -Os -Wl,-Map,output.map -fno-omit-frame-pointer
  -D ARCH_ESP32
  -D TINY_S3
  -D USE_ILOG
  -D USE_SERIAL2
;  -D SERIAL_RX=16
;  -D SERIAL_TX=17
  -D RAM_SIZE=1024
  -D HAS_TFT=1
;  -D CALIBRATE_TOUCH=0
  -D LV_USE_LOG=0
  -D LV_USE_SYSMON=0
  -D LV_USE_PROFILER=0
  -D LV_USE_PERF_MONITOR=0
  -D LV_USE_MEM_MONITOR=0
  -D LGFX_DRIVER_TEMPLATE
  -D LGFX_DRIVER=LGFX_GENERIC
  -D LGFX_PANEL=ST7789
  -D LGFX_OFFSET_ROTATION=1
  -D LGFX_TOUCH=XPT2046
  -D LGFX_PIN_SCK=7
  -D LGFX_PIN_MOSI=11
  -D LGFX_PIN_MISO=9
  -D LGFX_PIN_CS=12
  -D LGFX_PIN_DC=3
  -D LGFX_PIN_RST=4
  -D LGFX_PIN_BL=16
  -D LGFX_TOUCH_INT=-1
  -D LGFX_TOUCH_CS=-1
  -D LGFX_TOUCH_CLK=-1
  -D LGFX_TOUCH_DO=-1
  -D LGFX_TOUCH_DIN=-1
  -D LGFX_TOUCH_X_MIN=300
  -D LGFX_TOUCH_X_MAX=3900
  -D LGFX_TOUCH_Y_MIN=400
  -D LGFX_TOUCH_Y_MAX=3900
  -D VIEW_320x240
;	-D USE_DOUBLE_BUFFER
  -I lib
  -I lib/mesh/generated
build_src_filter = ${env.build_src_filter}
  +<../lib/mesh>
lib_deps = ${env.lib_deps}
  LittleFS


[env:T-HMI]
board = lilygo-t-hmi
board_build.partitions = default_16MB.csv
upload_protocol = esptool
build_flags = ${env.build_flags} -fno-omit-frame-pointer
  -D ARCH_ESP32
  -D T_HMI
  -D USE_ILOG
  -D LV_USE_LOG=0
  ;-D WAIT_FOR_SERIAL0
  ;-D WAKE_ON_SERIAL
  -D USE_SERIAL1
  -D SERIAL_RX=15
  -D SERIAL_TX=16
  -D BUTTON_PIN=0
  -D INPUTDRIVER_BUTTON_TYPE=0
;  -D CALIBRATE_TOUCH=0
  -D PWR_ON_PIN=14
  -D PWR_EN_PIN=10
  -D HAS_SDCARD
  -D HAS_SD_MMC
  -D MAP_FULL_REDRAW
  -D SD_SCLK_PIN=12
  -D SD_MISO_PIN=13
  -D SD_MOSI_PIN=11
  -D BOARD_MAX_SDMMC_FREQ=56000
  -D HAS_TFT=1
  -D RAM_SIZE=5120
  -D LV_USE_SYSMON=0
  -D LV_USE_PROFILER=0
  -D LV_USE_PERF_MONITOR=0
  -D LV_USE_MEM_MONITOR=0
  -D DONT_USE_ESP_TIMER
;  -D USE_DOUBLE_BUFFER
  -D LGFX_DRIVER=LGFX_T_HMI
  -D VIEW_320x240
  -I lib
  -I lib/mesh/generated
build_src_filter = ${env.build_src_filter}
  +<../lib/mesh>
lib_deps = ${env.lib_deps}
  LittleFS

[env:T-DECK]
board = t-deck
board_build.partitions = default_16MB.csv
build_flags = ${env.build_flags}
  -D ARCH_ESP32
  -D T_DECK
  -D USE_ILOG
  -D USE_DUMMY_SERIAL
  -D CALIBRATE_TOUCH=0
  -D KB_POWERON=10
  -D HAS_TFT=1
  -D RAM_SIZE=5120
;  -D USE_DOUBLE_BUFFER
  -D LGFX_DRIVER=LGFX_TDECK
  -D VIEW_320x240
  -I lib
  -I lib/mesh/generated
  -I variants/t-deck
build_src_filter = ${env.build_src_filter}
  +<../lib/mesh>
lib_deps = ${env.lib_deps}
  LittleFS

[env:T-WATCH-S3]
board = t-watch-s3
board_build.partitions = default_16MB.csv
upload_protocol = esptool
build_flags = ${env.build_flags}
  -D ARCH_ESP32
  -D T_WATCH_S3
  -D USE_ILOG
  -D USE_DUMMY_SERIAL
  -D HAS_TFT=1
  -D RAM_SIZE=512
;  -D USE_DOUBLE_BUFFER
  -D LGFX_DRIVER=LGFX_TWATCH_S3
  -D VIEW_240x240
  -D TFT_BL=45
  -I lib
  -I lib/mesh/generated
  -I variants/t-watch-s3
build_src_filter = ${env.build_src_filter} 
  +<../lib/mesh>
lib_deps = ${env.lib_deps}
  LittleFS

[env:SenseCAP-Indicator]
platform_packages =
;    platformio/framework-arduinoespressif32 @ symlink:///home/manuel/Documents/PlatformIO/Projects/arduino-esp32-fork
    platformio/framework-arduinoespressif32 @ https://github.com/mverch67/arduino-esp32.git#add_tca9535 ; based on 2.0.16
board = seeed-sensecap-indicator
board_build.partitions = default_8MB.csv
upload_protocol = esptool
build_flags = ${env.build_flags}
  -D ARCH_ESP32
  -D SENSECAP_INDICATOR
  -D IO_EXPANDER=0x40
  -D USE_ILOG
  -D USE_DUMMY_SERIAL
  ;-D CALIBRATE_TOUCH=0
  -D HAS_TFT=1
  -D RAM_SIZE=4096
  -D LV_CACHE_DEF_SIZE=2621440
  -D DISPLAY_SET_RESOLUTION
;  -D USE_DOUBLE_BUFFER
  -D LGFX_DRIVER=LGFX_INDICATOR
  -D VIEW_320x240
  -D LV_USE_SYSMON=0
  -D LV_USE_PROFILER=0
  -D LV_USE_PERF_MONITOR=0
  -D LV_USE_MEM_MONITOR=0
  -D LV_USE_LOG=0
  -I lib
  -I lib/mesh/generated
  -I variants/seeed-sensecap-indicator
build_src_filter = ${env.build_src_filter}
  +<../lib/mesh>
lib_deps = ${env.lib_deps}
  LittleFS

; https://vi.aliexpress.com/item/1005006478501734.html
[env:ESP-4848S040]
board = ESP-4848S040
board_build.partitions = default_8MB.csv
upload_protocol = esptool
debug_tool = esp-builtin
debug_init_break = tbreak setup
debug_port = /dev/ttyUSB0
build_flags = ${env.build_flags}
  -D ARCH_ESP32
  -D ESP_4848S040
  -D USE_ILOG
;  -D WAIT_FOR_SERIAL0
;  -D WAKE_ON_SERIAL
;  -D USE_DUMMY_SERIAL
  -D USE_SERIAL0
  -D SERIAL_RX=43
  -D SERIAL_TX=44
;  -D BUTTON_PIN=0
  ;-D CALIBRATE_TOUCH=1
  -D HAS_TFT=1
  -D RAM_SIZE=6144
  -D LV_CACHE_DEF_SIZE=3145728
;  -D USE_DOUBLE_BUFFER
  -D DISPLAY_SET_RESOLUTION
  -D LGFX_DRIVER=LGFX_4848S040
  -D VIEW_320x240
  -D LV_USE_SYSMON=0
  -D LV_USE_PROFILER=0
  -D LV_USE_PERF_MONITOR=0
  -D LV_USE_MEM_MONITOR=0
  -D LV_USE_LOG=0
  -D HAS_SDCARD
  -D MAP_FULL_REDRAW
  -I lib
  -I lib/mesh/generated
  -I variants/esp-4848s040
build_src_filter = ${env.build_src_filter}
  +<../lib/mesh>
lib_deps = ${env.lib_deps}
  LittleFS

; https://www.makerfabs.com/esp32-s3-parallel-tft-with-touch-4-inch.html
[env:MAKERFABS-480X480]
board = ESP-4848S040
board_build.partitions = default_8MB.csv
upload_protocol = esptool
debug_tool = esp-builtin
debug_init_break = tbreak setup
debug_port = /dev/ttyUSB0
build_flags = ${env.build_flags}
  -D ARCH_ESP32
  -D MAKERFABS_480X480
  -D USE_ILOG
;  -D WAIT_FOR_SERIAL0
;  -D WAKE_ON_SERIAL
;  -D USE_DUMMY_SERIAL
  -D USE_SERIAL0
  -D SERIAL_RX=20
  -D SERIAL_TX=19
  ;-D CALIBRATE_TOUCH=1
  -D HAS_TFT=1
  -D RAM_SIZE=6144
  -D LV_CACHE_DEF_SIZE=2621440
;  -D USE_DOUBLE_BUFFER
  -D DISPLAY_SET_RESOLUTION
  -D LGFX_DRIVER=LGFX_MAKERFABS480X480
  -D VIEW_320x240
  -D LV_USE_SYSMON=0
  -D LV_USE_PROFILER=0
  -D LV_USE_PERF_MONITOR=0
  -D LV_USE_MEM_MONITOR=0
  -D LV_USE_LOG=0
  -I lib
  -I lib/mesh/generated
  -I variants/makerfabs-480x480
build_src_filter = ${env.build_src_filter}
  +<../lib/mesh>
lib_deps = ${env.lib_deps}
  LittleFS

[env:HELTEC-TRACKER]
board = heltec-wireless-tracker
build_flags = ${env.build_flags}
  -D ARCH_ESP32
  -D HELTEC_TRACKER
  -D USE_ILOG
  -D USE_DUMMY_SERIAL
  -D RAM_SIZE=96
  -D LGFX_DRIVER=LGFX_HELTEC_TRACKER
  -D VIEW_160x80
  -I lib
  -I lib/mesh/generated
  -I variants/heltec-wireless-tracker
build_src_filter = ${env.build_src_filter}
  +<../lib/mesh>
lib_deps = ${env.lib_deps}
  LittleFS


[env:picow-oled]
platform = https://github.com/maxgerhardt/platform-raspberrypi.git
board = pico
board_build.filesystem_size = 0.5m
board_build.core = earlephilhower
upload_protocol = cmsis-dap
debug_speed = 5000
debug_init_break = tbreak setup
debug_port = /dev/ttyACM0
debug_tool = cmsis-dap
build_flags = ${env.build_flags} -I.
  -D ARCH_RP2040
  -D PICO
 ;-D LIB_PICO_STDIO_USB           ; for printf() via USB serial, not UART
  -D PICO_USB                     ; activate tinyusb
  -D USE_ILOG
  -D RAM_SIZE=64
  -D OLED_DRIVER=OLED
  -D VIEW_128x64
  -I lib
  -I lib/mesh/generated
build_src_filter = ${env.build_src_filter}
  +<../lib/mesh>

[env:native_320x240] ; Linux simulation
platform = https://github.com/meshtastic/platform-native.git#0e10e92627802594576ce831bb84e3127525b7dd
board = cross_platform
debug_test = *
build_flags = ${env.build_flags} -O0 -Wall -Wextra -fsanitize=address -lgpiod -lX11 -linput -lxkbcommon
  -fPIC
  -lstdc++fs
  -I src/platform/portduino
  -D RADIOLIB_EEPROM_UNSUPPORTED
  -D PORTDUINO_LINUX_HARDWARE
  -D ARCH_PORTDUINO
  -D USE_ILOG
  -D USE_DUMMY_SERIAL
  -D USE_X11=1
  -D HAS_TFT=1
  -D RAM_SIZE=4096
  -D LV_USE_LOG=1
  -D LV_USE_SYSMON=1
  -D LV_USE_PERF_MONITOR=1
  -D LV_USE_MEM_MONITOR=0
  -D LV_USE_PROFILER=0
  -D LV_USE_LIBINPUT=1
  -D VIEW_320x240
  -I lib
  -I lib/mesh/generated
build_src_filter = ${env.build_src_filter} 
  +<../lib/log>
lib_deps =
  ${device-ui_base.lib_deps}
  https://github.com/lovyan03/LovyanGFX.git#5a39989aa2c9492572255b22f033843ec8900233
  rweather/Crypto@^0.4.0

[env:native_240x240] ; Linux simulation
platform = https://github.com/meshtastic/platform-native.git#0e10e92627802594576ce831bb84e3127525b7dd
board = cross_platform
build_flags = ${env.build_flags} -O0 -Wall -Wextra -fsanitize=address -lgpiod -lX11
  -D ARCH_PORTDUINO
  -D USE_ILOG
  -D USE_DUMMY_SERIAL
  -D USE_X11=1
  -D HAS_TFT=1
  -D RAM_SIZE=4096
  -D LV_USE_LOG=1
  -D LV_USE_SYSMON=1
  -D LV_USE_PERF_MONITOR=1
  -D LV_USE_MEM_MONITOR=0
  -D LV_USE_PROFILER=0
  -D LV_USE_LIBINPUT=1
  -D VIEW_240x240
  -I lib
  -I lib/mesh/generated
build_src_filter = ${env.build_src_filter}
  +<../lib/log>
lib_deps =
  ${device-ui_base.lib_deps}
  https://github.com/lovyan03/LovyanGFX.git#5a39989aa2c9492572255b22f033843ec8900233
  rweather/Crypto@^0.4.0
